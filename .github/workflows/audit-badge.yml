name: npm audit check

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch:  # Enable manual triggering
    inputs:
      runAudit:
        description: 'Run npm audit manually'
        required: false  # Make input optional

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify the Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit --production --json > audit-results.json

      - name: Create audit badge(s)
        run: |
          # Extract info vulnerability count
          info=$(jq -r '.metadata.vulnerabilities.info' audit-results.json)
          if [ $info -ne 0 ]; then
            echo "<img alt=\"npm audit\" src=\"https://img.shields.io/badge/npm_audit-info:$info-darkgreen\">" > audit-badge.md
          fi

          # Extract low vulnerability count
          low=$(jq -r '.metadata.vulnerabilities.low' audit-results.json)
          if [ $low -ne 0 ]; then
            echo "<img alt=\"npm audit\" src=\"https://img.shields.io/badge/npm_audit-low:$low-CA6F1E\">" >> audit-badge.md
          fi

          # Extract moderate vulnerability count
          moderate=$(jq -r '.metadata.vulnerabilities.moderate' audit-results.json)
          if [ $moderate -ne 0 ]; then
            echo "<img alt=\"npm audit\" src=\"https://img.shields.io/badge/npm_audit-moderate:$moderate-CA6F1E\">" >> audit-badge.md
          fi

          # Extract high vulnerability count
          high=$(jq -r '.metadata.vulnerabilities.high' audit-results.json)
          if [ $high -ne 0 ]; then
            echo "<img alt=\"npm audit\" src=\"https://img.shields.io/badge/npm_audit-high:$high-darkred\">" >> audit-badge.md
          fi

          # Extract critical vulnerability count
          critical=$(jq -r '.metadata.vulnerabilities.critical' audit-results.json)
          if [ $critical -ne 0 ]; then
            echo "<img alt=\"npm audit\" src=\"https://img.shields.io/badge/npm_audit-critical:$critical-darkred\">" >> audit-badge.md
          fi

      - name: Prepend badge content to README.md
        run: |
          # Define the pattern to search for
          pattern='<img alt="npm audit" src="https://img.shields.io/badge/npm_audit'

          # Use sed to delete lines matching the pattern in README.md
          sed -i "/^${pattern}/d" README.md

          badge_content=$(cat audit-badge.md)
          readme_content=$(cat README.md)
          echo "$badge_content" > new_readme.md
          echo "$readme_content" >> new_readme.md
          mv new_readme.md README.md
          rm audit-badge.md  # Clean up temporary badge file
          
      - name: Commit changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add README.md
          git commit -m "Update README with npm audit badge"
          git push
